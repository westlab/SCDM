syntax="proto3";

package docker_migration;

// The docker migration service definition
service  DockerMigrator {

    // For Docker 
    // A simple RPC
    rpc PingDockerServer (Signal) returns (Status) {}
    rpc RestoreContainer (CheckpointSummary) returns (Status) {}
    rpc InspectArtifacts (DockerSummary) returns (Status) {}
    rpc CreateContainer (DockerSummary) returns (Status) {}
    rpc PullImage(DockerSummary) returns (Status) {}
    rpc CreateTmpDir (Signal) returns (Status) {}
    rpc ReloadDockerd (DockerSummary) returns (Status) {}
    rpc AllocateContainerArtifacts (ContainerArtifacts) returns (Status) {}
    // A server-to-client streaming RPC

    // For Smart Coommunity Router
    // A simple RPC
    rpc PrepareAppLaunch (AppInfo) returns (Status) {}
    rpc PrepareForCheckpoint(SessionInfo) returns (Status) {}
    rpc GetAppInfo(SessionInfo) returns (AppInfo) {}
    rpc UpdateBufReadOffset (SessionInfo) returns (Status) {}
    rpc GetBufInfo (BufInfo) returns (Status) {}
    rpc CheckPacketArrival (BufInfo) returns (Status) {}
    rpc RequestMigration (DockerSummary) returns (stream Status) {}
}

// A DockerSummary is a message
// It contains the base docker image name and version, and container name
message DockerSummary {
    string image_name = 1;
    string version = 2;
    ContainerOptions options = 3;
}

// A ContainerOptoin summarizes docker creation/running options
// It contains the base docker options like cotnainer name, port, and sth.
message ContainerOptions {
    string container_name = 1;
    Port port = 2;
    repeated Volume volumes=3;
    //TODO: additional options such as volumes, shm_size...etc...
}

message ContainerArtifacts {
    string container_name = 1;
    string container_id=2;
    repeated string image_layer_ids=3;
    repeated string container_layer_ids=4;
    repeated Volume volumes=5;
}

message Port {
    int32 host = 1;
    int32 container = 2;
}

message Volume {
    string kind = 1;
    string h_path = 2;
    string d_path =3;
}

// A Checkpoint is mesage after creating checkpoint on src node
// It contains c_name and cp_name, which represents checkpoint dir name,
message CheckpointSummary {
    // Container name
    string c_name = 1;
    string cp_name = 2;
    // Cp_name represents checkpoint dir name
    string default_path = 3;
}

// A Ping is a message for asking
// whether the dockerd is runing or not
// It containts a name.
message Signal {
    string name = 1;
}

// A Status is reviceived in responce to a Request from sth rpc
message Status {
    // The number represents whether the request is done successfully or not, and container id
    // code: a number other than 0 means fail by a reason that is refered by error code.
    // c_id: container id
    int32 code = 1;
    string c_id = 2;
}

message AppInfo {
    string buf_loc = 1;
    string sig_loc = 2;
    repeated string rules = 3;
}

message SessionInfo {
    int32 app_id = 1;
    repeated string s_packet_ids = 2;
}

message BufInfo {
    int32 app_id = 1;
    int32 kind = 2;
    int32 buf_info = 3; // in this case, packet_id
}

